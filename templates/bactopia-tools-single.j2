---
title: {{ meta.docs.meta.title }}
description: {{ meta.docs.meta.description }}
---
# Bactopia Tool - `{{ meta.name }}`
{{ meta.docs.introduction }}

## Example Usage
```
bactopia --wf {{ meta.name }} \
  --bactopia /path/to/your/bactopia/results \ 
  --include includes.txt {% if 'example' in meta %} \
  meta.example
  {% endif %} 
```

## Output Overview

Below is the default output structure for the `{{ meta.name }}` tool. Where possible the 
file descriptions below were modified from a tools description.

```{bash}
{{ meta.docs.output.tree }}
```

{% if meta.docs.output.add_note == True -%}
!!! info "Directory structure might be different"

    `{{ meta.name }}` is available as a standalone Bactopia Tool, as well as from
    the main Bactopia workflow (e.g. through Staphopia or Merlin). If executed 
    from Bactopia, the `{{ meta.name }}` directory structure might be different, but the
    output descriptions below still apply.

{% endif %}

### Results

{% for result in meta.docs.output.folders -%}

#### {{ result.name }}

{{ result.description }}

{% if result.is_extensions == True -%}
| Extension                     | Description |
|-------------------------------|-------------|
{% else -%}
| Filename                      | Description |
|-------------------------------|-------------|
{% endif -%}

{% for row in result.table -%}
| {{ row.id | replace("<", "&lt;") | replace(">", "&gt;") }} | {{ row.description }} |
{% endfor %}

{% endfor %}


### Audit Trail

Below are files that can assist you in understanding which parameters and program versions were used.

#### Logs 

Each process that is executed will have a folder named `logs`. In this folder are helpful
files for you to review if the need ever arises.

| Extension    | Description |
|--------------|-------------|
| .begin       | An empty file used to designate the process started |
| .err         | Contains STDERR outputs from the process |
| .log         | Contains both STDERR and STDOUT outputs from the process |
| .out         | Contains STDOUT outputs from the process |
| .run         | The script Nextflow uses to stage/unstage files and queue processes based on given profile |
| .sh          | The script executed by bash for the process  |
| .trace       | The Nextflow [Trace](https://www.nextflow.io/docs/latest/tracing.html#trace-report) report for the process |
| versions.yml | A YAML formatted file with program versions |

#### Nextflow Reports

These Nextflow reports provide great a great summary of your run. These can be used to optimize
resource usage and estimate expected costs if using cloud platforms.

| Filename | Description |
|----------|-------------|
| {{ meta.name }}-dag.dot | The Nextflow [DAG visualisation](https://www.nextflow.io/docs/latest/tracing.html#dag-visualisation) |
| {{ meta.name }}-report.html | The Nextflow [Execution Report](https://www.nextflow.io/docs/latest/tracing.html#execution-report) |
| {{ meta.name }}-timeline.html | The Nextflow [Timeline Report](https://www.nextflow.io/docs/latest/tracing.html#timeline-report) |
| {{ meta.name }}-trace.txt | The Nextflow [Trace](https://www.nextflow.io/docs/latest/tracing.html#trace-report) report |


#### Program Versions

At the end of each run, each of the `versions.yml` files are merged into the files below.

| Filename                  | Description |
|---------------------------|-------------|
| software_versions.yml     | A complete list of programs and versions used by each process | 
| software_versions_mqc.yml | A complete list of programs and versions formatted for [MultiQC](https://multiqc.info/) |

## Parameters

{{ params.bactopia_tools }}

{{ params.module }}

{{ params.generic }}

## Citations
If you use Bactopia and `{{ meta.name }}` in your analysis, please cite the following.

- [{{ citations.bactopia.name }}]({{ citations.bactopia.link }})  
    {{ citations.bactopia.cite }}  

{% for ref in meta.docs.citations | sort -%}
- [{{ citations[ref].name }}]({{ citations[ref].link }})  
    {{ citations[ref].cite }}  
{% endfor %}
